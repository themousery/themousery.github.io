define("mediaPlayer",["lodash","react","core","compDesignUtils","santaProps","mediaCommon"],function(a,b,c,d,e,f){"use strict";var g=f.mediaLogicMixins.mediaPlayer;function h(c,d){return b.Children.map(c,function(c){return b.cloneElement(c,{compProp:a.defaults({playerId:d},c.props.compProp)})})}return{displayName:"MediaPlayer",mixins:[g,c.compMixins.skinBasedComp],propTypes:a.defaults({style:e.Types.Component.style.isRequired,compDesign:e.Types.Component.compDesign,compProp:e.Types.Component.compProp}),statics:{useSantaTypes:true,behaviors:f.mediaBehaviors.mediaPlayer},handleCatcherEvents:function(a){switch(a.type){case"mouseenter":if(this.props.compProp.playerInteraction==="playOnHover"){this.playMedia()}else if(this.props.compProp.playerInteraction==="pauseOnHover"){this.pauseMedia()}break;case"mouseleave":if(this.props.compProp.playerInteraction==="playOnHover"){this.pauseMedia()}else if(this.props.compProp.playerInteraction==="pauseOnHover"){this.playMedia()}break;case"click":this.togglePlayMedia();break}},getCatcherProperties:function(){var a={};if(this.props.compProp.playerInteraction==="playOnHover"||this.props.compProp.playerInteraction==="pauseOnHover"){a.onMouseEnter=this.handleCatcherEvents;a.onMouseLeave=this.handleCatcherEvents}else if(this.props.compProp.playerInteraction==="click"){a.onClick=this.handleCatcherEvents}return a},getSkinProperties:function(){var a={"":{style:this.props.style},background:this.createFillLayers(),catcher:this.getCatcherProperties(),container:{style:d.getContainerStyle(this.props.compDesign)},inlineContent:{children:h(this.props.children,this.props.id)}};return a}}});